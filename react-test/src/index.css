* {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}

body {
  font-family: 'Arial', sans-serif;
  background-color: #f0f2f5;
  display: flex;
  justify-content: center;
  align-items: center;
  min-height: 100vh;
  /* background-image: linear-gradient(180deg, blue, gold ); */
}

.form-container {
  max-width: 700px;
  background-color: #ffffff;
  padding: 150px;
  border-radius: 15px;
  box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2);
  text-align: center;
}

h2 {
  font-size: 2rem;
  margin-bottom: 25px;
  color: #333;
}
.form-control {
  position: relative;
  margin-bottom: 25px;
}
.nav-container {
  background-color: #333; /* Dark background */
  padding: 20px 20px; /* Padding for spacing */
  display: flex; /* Flexbox layout */
  justify-content: space-between; /* Even space between nav items */
  align-items: center; /* Align items vertically */
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  z-index: 100; /* Stay on top of other elements */
  padding: auto;
}

/* List styles */
.nav-container ul {
  list-style: none; /* Remove default bullet points */
  margin: 0;
  padding: 0;
  display: flex; /* Display list items inline */
  gap: 20px; /* Space between list items */
}

/* Individual list items */
.nav-container li {
  margin: 0;
}

/* Link styles */
.nav-container a {
  text-decoration: none; /* Remove underline */
  color: #fff; /* White text */
  font-weight: bold; /* Bold text */
  padding: 10px 15px; /* Padding around the links */
  transition: background-color 0.3s ease; /* Smooth hover transition */
}

/* Hover effect */
.nav-container a:hover {
  background-color: #555; /* Darker background on hover */
  border-radius: 5px; /* Rounded corners on hover */
}

input[type="text"],
input[type="password"] 
{
  width: 100%;
  padding: 14px 20px;
  font-size: 1rem;
  border: 2px solid #e0e0e0;
  border-radius: 8px;
  transition: border-color 0.3s ease;
}

input:focus {
  border-color: #007bff;
  outline: none;
  box-shadow: 0 0 5px rgba(0, 123, 255, 0.5);
}
input::placeholder {
  color: #bbb;
}

.form-control svg {
  display: flex;
  position: absolute;
  top: 50%;
  left: 10px;
  transform: translateY(-50%);
  font-size: 1.5rem;
  color: #007bff;
}

button {
  width: 100%;
  padding: 14px;
  background-color: #007bff;
  color: white;
  font-size: 1.1rem;
  border: none;
  border-radius: 8px;
  cursor: pointer;
  transition: background-color 0.3s ease, box-shadow 0.3s ease;
}
.nav-button{
  width: 100%;

}
.nav-div{
  display: flex;
  padding: 10px;
  font-size: large;
}

button:hover {
  background-color: #0056b3;
  box-shadow: 0 4px 10px rgba(0, 123, 255, 0.3);
}

p {
  margin-top: 20px;
  font-size: 0.9rem;
  color: #eae9e9;
  cursor: pointer;
  transition: color 0.3s ease;
}

p:hover {
  color: #007bff;
  text-decoration: underline;
}

input, button {
  transition: all 0.3s ease;
}

.form-container :hover {
  transform: scale(1.02);
}

.parking {
  display: grid;
  grid-template-columns: repeat(5, 1fr); /* 5 columns, can be adjusted */
  gap: 20px; /* Space between the buttons */
  padding: 20px;
}

.parking button {
  background-color: #4CAF50; /* Green background */
  color: white;
  border: none;
  padding: 20px;
  font-size: 16px;
  border-radius: 5px;
  cursor: pointer;
  transition: background-color 0.3s;
 
}

.parking button:hover {
  background-color: #45a049; /* Darker green on hover */
}
.parking-button.reserved {
  background-color: gray;
  cursor: not-allowed; /* Indicate that the spot can't be interacted with */
}

.parking-button.free {
  background-color: #4CAF50; /* Green background for free spots */
}
.nav-div{
  color: #bbb;
}
